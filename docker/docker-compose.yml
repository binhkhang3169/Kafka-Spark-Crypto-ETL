version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: crypto_postgres
    restart: always
    environment:
      POSTGRES_DB: crypto_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  spark:
    image: jupyter/pyspark-notebook:latest
    container_name: crypto_spark
    restart: always
    environment:
      SPARK_MASTER: local[*]
    ports:
      - "8888:8888"  # Jupyter Notebook
    depends_on:
      - postgres
    volumes:
      - ./notebooks:/home/jovyan/work

  kafka:
    image: docker.io/bitnami/kafka:3.9
    container_name: crypto_kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    depends_on:
      - spark
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

volumes:
  kafka_data:
    driver: local
  postgres_data:
