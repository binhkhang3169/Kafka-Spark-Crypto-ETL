version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: crypto_postgres
    restart: always
    environment:
      POSTGRES_DB: crypto_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  spark:
    image: jupyter/pyspark-notebook:latest
    container_name: crypto_spark
    restart: always
    environment:
      SPARK_MASTER: local[*]
    ports:
      - "8888:8888"  # Jupyter Notebook
    depends_on:
      - postgres
    volumes:
      - ./notebooks:/home/jovyan/work

  kafka:
    image: docker.io/bitnami/kafka:3.9
    container_name: crypto_kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    depends_on:
      - spark
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  airflow:
    image: apache/airflow:2.7.0
    container_name: crypto_airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:password@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__FERNET_KEY: 'your_fernet_key'  # Thay thế bằng key thực tế
    ports:
      - "8081:8080"
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./logs:/usr/local/airflow/logs
      - ./plugins:/usr/local/airflow/plugins
      - ./config:/usr/local/airflow/config
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  airflow-init:
    image: apache/airflow:2.7.0
    container_name: crypto_airflow_init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:password@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__FERNET_KEY: 'your_fernet_key'  # Thay thế bằng key thực tế
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./logs:/usr/local/airflow/logs
      - ./plugins:/usr/local/airflow/plugins
      - ./config:/usr/local/airflow/config
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: /bin/bash
    command: 
      - -c 
      - |
        if [[ -z \"${AIRFLOW_UID}\" ]]; then
          echo -e '\033[1;33mWARNING: AIRFLOW_UID not set!\033[0m'
        fi
        airflow db init
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
        echo '\033[1;32mAirflow initialized successfully!\033[0m'
    

volumes:
  kafka_data:
    driver: local
  postgres_data: